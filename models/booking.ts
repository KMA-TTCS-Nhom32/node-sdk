/* tslint:disable */
/* eslint-disable */
/**
 * AHomeVilla documentation
 * This is AHomeVilla\'s APIs description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { GuestDetail } from './guest-detail';
// May contain unused imports in some cases
// @ts-ignore
import type { HotelRoom } from './hotel-room';
// May contain unused imports in some cases
// @ts-ignore
import type { User } from './user';

/**
 * 
 * @export
 * @interface Booking
 */
export interface Booking {
    /**
     * 
     * @type {string}
     * @memberof Booking
     */
    'id': string;
    /**
     * Soft delete flag
     * @type {boolean}
     * @memberof Booking
     */
    'isDeleted': boolean;
    /**
     * Soft delete timestamp
     * @type {string}
     * @memberof Booking
     */
    'deletedAt': string | null;
    /**
     * 
     * @type {string}
     * @memberof Booking
     */
    'createdAt': string;
    /**
     * 
     * @type {string}
     * @memberof Booking
     */
    'updatedAt': string;
    /**
     * Booking code
     * @type {string}
     * @memberof Booking
     */
    'code': string;
    /**
     * Type of booking
     * @type {string}
     * @memberof Booking
     */
    'type': BookingTypeEnum;
    /**
     * Type of booking
     * @type {string}
     * @memberof Booking
     */
    'create_type': BookingCreateTypeEnum;
    /**
     * ID of the room being booked
     * @type {string}
     * @memberof Booking
     */
    'roomId': string;
    /**
     * Room being booked
     * @type {HotelRoom}
     * @memberof Booking
     */
    'room': HotelRoom;
    /**
     * ID of the user making the booking
     * @type {string}
     * @memberof Booking
     */
    'userId': string;
    /**
     * User making the booking
     * @type {User}
     * @memberof Booking
     */
    'user': User;
    /**
     * Booking start date
     * @type {string}
     * @memberof Booking
     */
    'start_date': string;
    /**
     * Booking end date
     * @type {string}
     * @memberof Booking
     */
    'end_date': string;
    /**
     * Booking start time
     * @type {string}
     * @memberof Booking
     */
    'start_time': string;
    /**
     * Booking end time
     * @type {string}
     * @memberof Booking
     */
    'end_time': string;
    /**
     * Number of adults
     * @type {string}
     * @memberof Booking
     */
    'total_amount': string;
    /**
     * Booking status
     * @type {string}
     * @memberof Booking
     */
    'status': BookingStatusEnum;
    /**
     * Reason for canceling the booking
     * @type {string}
     * @memberof Booking
     */
    'cancel_reason': string;
    /**
     * Payment method
     * @type {string}
     * @memberof Booking
     */
    'payment_method': BookingPaymentMethodEnum;
    /**
     * Number of guests
     * @type {number}
     * @memberof Booking
     */
    'number_of_guests': number;
    /**
     * Number of adults
     * @type {number}
     * @memberof Booking
     */
    'adults': number;
    /**
     * Number of children
     * @type {number}
     * @memberof Booking
     */
    'children': number;
    /**
     * Number of infants
     * @type {number}
     * @memberof Booking
     */
    'infants': number;
    /**
     * Special requirements
     * @type {string}
     * @memberof Booking
     */
    'special_requests': string;
    /**
     * Check in time
     * @type {string}
     * @memberof Booking
     */
    'check_in_time': string;
    /**
     * Check out time
     * @type {string}
     * @memberof Booking
     */
    'check_out_time': string;
    /**
     * Payment status
     * @type {string}
     * @memberof Booking
     */
    'payment_status': BookingPaymentStatusEnum;
    /**
     * Payment details
     * @type {object}
     * @memberof Booking
     */
    'payment_details': object;
    /**
     * Guest details
     * @type {GuestDetail}
     * @memberof Booking
     */
    'guest_details': GuestDetail;
    /**
     * Promotion code
     * @type {string}
     * @memberof Booking
     */
    'promotion_code': string;
    /**
     * Is business trip
     * @type {boolean}
     * @memberof Booking
     */
    'is_business_trip': boolean;
}

/**
    * @export
    * @enum {string}
    */
export enum BookingTypeEnum {
    Hourly = 'HOURLY',
    Nightly = 'NIGHTLY',
    Daily = 'DAILY'
}
/**
    * @export
    * @enum {string}
    */
export enum BookingCreateTypeEnum {
    OnlineBooking = 'ONLINE_BOOKING',
    AtHotel = 'AT_HOTEL'
}
/**
    * @export
    * @enum {string}
    */
export enum BookingStatusEnum {
    Pending = 'PENDING',
    WaitingForCheckIn = 'WAITING_FOR_CHECK_IN',
    CheckedIn = 'CHECKED_IN',
    Cancelled = 'CANCELLED',
    Completed = 'COMPLETED',
    Refunded = 'REFUNDED',
    Rejected = 'REJECTED'
}
/**
    * @export
    * @enum {string}
    */
export enum BookingPaymentMethodEnum {
    Cash = 'CASH',
    Banking = 'BANKING',
    Zalopay = 'ZALOPAY',
    Momo = 'MOMO',
    VnPay = 'VN_PAY',
    VietQr = 'VIET_QR'
}
/**
    * @export
    * @enum {string}
    */
export enum BookingPaymentStatusEnum {
    Unpaid = 'UNPAID',
    Paid = 'PAID',
    Failed = 'FAILED',
    Refunded = 'REFUNDED'
}


