/**
 * AHomeVilla documentation
 * This is AHomeVilla\'s APIs description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { VerifyCodeDto } from '../models';
import type { VerifyCodeResponseDto } from '../models';
import type { VerifyEmailOTP } from '../models';
/**
 * VerificationApi - axios parameter creator
 * @export
 */
export declare const VerificationApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Verify a code
     * @param {VerifyCodeDto} verifyCodeDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verificationControllerVerifyCode: (verifyCodeDto: VerifyCodeDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Verify an email OTP
     * @param {VerifyEmailOTP} verifyEmailOTP
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verificationControllerVerifyEmailOTP: (verifyEmailOTP: VerifyEmailOTP, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * VerificationApi - functional programming interface
 * @export
 */
export declare const VerificationApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Verify a code
     * @param {VerifyCodeDto} verifyCodeDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verificationControllerVerifyCode(verifyCodeDto: VerifyCodeDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VerifyCodeResponseDto>>;
    /**
     *
     * @summary Verify an email OTP
     * @param {VerifyEmailOTP} verifyEmailOTP
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verificationControllerVerifyEmailOTP(verifyEmailOTP: VerifyEmailOTP, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VerifyCodeResponseDto>>;
};
/**
 * VerificationApi - factory interface
 * @export
 */
export declare const VerificationApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Verify a code
     * @param {VerificationApiVerificationControllerVerifyCodeRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verificationControllerVerifyCode(requestParameters: VerificationApiVerificationControllerVerifyCodeRequest, options?: RawAxiosRequestConfig): AxiosPromise<VerifyCodeResponseDto>;
    /**
     *
     * @summary Verify an email OTP
     * @param {VerificationApiVerificationControllerVerifyEmailOTPRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    verificationControllerVerifyEmailOTP(requestParameters: VerificationApiVerificationControllerVerifyEmailOTPRequest, options?: RawAxiosRequestConfig): AxiosPromise<VerifyCodeResponseDto>;
};
/**
 * Request parameters for verificationControllerVerifyCode operation in VerificationApi.
 * @export
 * @interface VerificationApiVerificationControllerVerifyCodeRequest
 */
export interface VerificationApiVerificationControllerVerifyCodeRequest {
    /**
     *
     * @type {VerifyCodeDto}
     * @memberof VerificationApiVerificationControllerVerifyCode
     */
    readonly verifyCodeDto: VerifyCodeDto;
}
/**
 * Request parameters for verificationControllerVerifyEmailOTP operation in VerificationApi.
 * @export
 * @interface VerificationApiVerificationControllerVerifyEmailOTPRequest
 */
export interface VerificationApiVerificationControllerVerifyEmailOTPRequest {
    /**
     *
     * @type {VerifyEmailOTP}
     * @memberof VerificationApiVerificationControllerVerifyEmailOTP
     */
    readonly verifyEmailOTP: VerifyEmailOTP;
}
/**
 * VerificationApi - object-oriented interface
 * @export
 * @class VerificationApi
 * @extends {BaseAPI}
 */
export declare class VerificationApi extends BaseAPI {
    /**
     *
     * @summary Verify a code
     * @param {VerificationApiVerificationControllerVerifyCodeRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VerificationApi
     */
    verificationControllerVerifyCode(requestParameters: VerificationApiVerificationControllerVerifyCodeRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<VerifyCodeResponseDto, any>>;
    /**
     *
     * @summary Verify an email OTP
     * @param {VerificationApiVerificationControllerVerifyEmailOTPRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VerificationApi
     */
    verificationControllerVerifyEmailOTP(requestParameters: VerificationApiVerificationControllerVerifyEmailOTPRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<VerifyCodeResponseDto, any>>;
}
