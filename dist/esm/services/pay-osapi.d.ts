/**
 * AHomeVilla documentation
 * This is AHomeVilla\'s APIs description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { CancelPaymentRequestDto } from '../models';
import type { ConfirmPaymentWebhookDto } from '../models';
import type { CreatePaymentRequestDto } from '../models';
/**
 * PayOSApi - axios parameter creator
 * @export
 */
export declare const PayOSApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Cancel a payment link
     * @param {CancelPaymentRequestDto} cancelPaymentRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    payosControllerCancelPayment: (cancelPaymentRequestDto: CancelPaymentRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Create a new payment request
     * @param {CreatePaymentRequestDto} createPaymentRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    payosControllerCreatePaymentRequest: (createPaymentRequestDto: CreatePaymentRequestDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get payment status
     * @param {string} paymentLinkId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    payosControllerGetPaymentStatus: (paymentLinkId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Handle payment confirmation webhook
     * @param {ConfirmPaymentWebhookDto} confirmPaymentWebhookDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    payosControllerHandleWebhook: (confirmPaymentWebhookDto: ConfirmPaymentWebhookDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PayOSApi - functional programming interface
 * @export
 */
export declare const PayOSApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Cancel a payment link
     * @param {CancelPaymentRequestDto} cancelPaymentRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    payosControllerCancelPayment(cancelPaymentRequestDto: CancelPaymentRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Create a new payment request
     * @param {CreatePaymentRequestDto} createPaymentRequestDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    payosControllerCreatePaymentRequest(createPaymentRequestDto: CreatePaymentRequestDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Get payment status
     * @param {string} paymentLinkId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    payosControllerGetPaymentStatus(paymentLinkId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>>;
    /**
     *
     * @summary Handle payment confirmation webhook
     * @param {ConfirmPaymentWebhookDto} confirmPaymentWebhookDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    payosControllerHandleWebhook(confirmPaymentWebhookDto: ConfirmPaymentWebhookDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<boolean>>;
};
/**
 * PayOSApi - factory interface
 * @export
 */
export declare const PayOSApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Cancel a payment link
     * @param {PayOSApiPayosControllerCancelPaymentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    payosControllerCancelPayment(requestParameters: PayOSApiPayosControllerCancelPaymentRequest, options?: RawAxiosRequestConfig): AxiosPromise<object>;
    /**
     *
     * @summary Create a new payment request
     * @param {PayOSApiPayosControllerCreatePaymentRequestRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    payosControllerCreatePaymentRequest(requestParameters: PayOSApiPayosControllerCreatePaymentRequestRequest, options?: RawAxiosRequestConfig): AxiosPromise<object>;
    /**
     *
     * @summary Get payment status
     * @param {PayOSApiPayosControllerGetPaymentStatusRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    payosControllerGetPaymentStatus(requestParameters: PayOSApiPayosControllerGetPaymentStatusRequest, options?: RawAxiosRequestConfig): AxiosPromise<object>;
    /**
     *
     * @summary Handle payment confirmation webhook
     * @param {PayOSApiPayosControllerHandleWebhookRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    payosControllerHandleWebhook(requestParameters: PayOSApiPayosControllerHandleWebhookRequest, options?: RawAxiosRequestConfig): AxiosPromise<boolean>;
};
/**
 * Request parameters for payosControllerCancelPayment operation in PayOSApi.
 * @export
 * @interface PayOSApiPayosControllerCancelPaymentRequest
 */
export interface PayOSApiPayosControllerCancelPaymentRequest {
    /**
     *
     * @type {CancelPaymentRequestDto}
     * @memberof PayOSApiPayosControllerCancelPayment
     */
    readonly cancelPaymentRequestDto: CancelPaymentRequestDto;
}
/**
 * Request parameters for payosControllerCreatePaymentRequest operation in PayOSApi.
 * @export
 * @interface PayOSApiPayosControllerCreatePaymentRequestRequest
 */
export interface PayOSApiPayosControllerCreatePaymentRequestRequest {
    /**
     *
     * @type {CreatePaymentRequestDto}
     * @memberof PayOSApiPayosControllerCreatePaymentRequest
     */
    readonly createPaymentRequestDto: CreatePaymentRequestDto;
}
/**
 * Request parameters for payosControllerGetPaymentStatus operation in PayOSApi.
 * @export
 * @interface PayOSApiPayosControllerGetPaymentStatusRequest
 */
export interface PayOSApiPayosControllerGetPaymentStatusRequest {
    /**
     *
     * @type {string}
     * @memberof PayOSApiPayosControllerGetPaymentStatus
     */
    readonly paymentLinkId: string;
}
/**
 * Request parameters for payosControllerHandleWebhook operation in PayOSApi.
 * @export
 * @interface PayOSApiPayosControllerHandleWebhookRequest
 */
export interface PayOSApiPayosControllerHandleWebhookRequest {
    /**
     *
     * @type {ConfirmPaymentWebhookDto}
     * @memberof PayOSApiPayosControllerHandleWebhook
     */
    readonly confirmPaymentWebhookDto: ConfirmPaymentWebhookDto;
}
/**
 * PayOSApi - object-oriented interface
 * @export
 * @class PayOSApi
 * @extends {BaseAPI}
 */
export declare class PayOSApi extends BaseAPI {
    /**
     *
     * @summary Cancel a payment link
     * @param {PayOSApiPayosControllerCancelPaymentRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PayOSApi
     */
    payosControllerCancelPayment(requestParameters: PayOSApiPayosControllerCancelPaymentRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary Create a new payment request
     * @param {PayOSApiPayosControllerCreatePaymentRequestRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PayOSApi
     */
    payosControllerCreatePaymentRequest(requestParameters: PayOSApiPayosControllerCreatePaymentRequestRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary Get payment status
     * @param {PayOSApiPayosControllerGetPaymentStatusRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PayOSApi
     */
    payosControllerGetPaymentStatus(requestParameters: PayOSApiPayosControllerGetPaymentStatusRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<object, any>>;
    /**
     *
     * @summary Handle payment confirmation webhook
     * @param {PayOSApiPayosControllerHandleWebhookRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PayOSApi
     */
    payosControllerHandleWebhook(requestParameters: PayOSApiPayosControllerHandleWebhookRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<boolean, any>>;
}
