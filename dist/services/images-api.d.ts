/**
 * AHomeVilla documentation
 * This is AHomeVilla\'s APIs description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { ImageUploadResponseDto } from '../models';
/**
 * ImagesApi - axios parameter creator
 * @export
 */
export declare const ImagesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Get image by public id
     * @param {string} publicId Public ID of the image
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    imagesControllerGetImageByPublicId: (publicId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Upload amenity icon
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    imagesControllerUploadIcon: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Upload multiple image
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    imagesControllerUploadImages: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ImagesApi - functional programming interface
 * @export
 */
export declare const ImagesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Get image by public id
     * @param {string} publicId Public ID of the image
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    imagesControllerGetImageByPublicId(publicId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ImageUploadResponseDto>>;
    /**
     *
     * @summary Upload amenity icon
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    imagesControllerUploadIcon(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ImageUploadResponseDto>>;
    /**
     *
     * @summary Upload multiple image
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    imagesControllerUploadImages(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ImageUploadResponseDto>>>;
};
/**
 * ImagesApi - factory interface
 * @export
 */
export declare const ImagesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Get image by public id
     * @param {ImagesApiImagesControllerGetImageByPublicIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    imagesControllerGetImageByPublicId(requestParameters: ImagesApiImagesControllerGetImageByPublicIdRequest, options?: RawAxiosRequestConfig): AxiosPromise<ImageUploadResponseDto>;
    /**
     *
     * @summary Upload amenity icon
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    imagesControllerUploadIcon(options?: RawAxiosRequestConfig): AxiosPromise<ImageUploadResponseDto>;
    /**
     *
     * @summary Upload multiple image
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    imagesControllerUploadImages(options?: RawAxiosRequestConfig): AxiosPromise<Array<ImageUploadResponseDto>>;
};
/**
 * Request parameters for imagesControllerGetImageByPublicId operation in ImagesApi.
 * @export
 * @interface ImagesApiImagesControllerGetImageByPublicIdRequest
 */
export interface ImagesApiImagesControllerGetImageByPublicIdRequest {
    /**
     * Public ID of the image
     * @type {string}
     * @memberof ImagesApiImagesControllerGetImageByPublicId
     */
    readonly publicId: string;
}
/**
 * ImagesApi - object-oriented interface
 * @export
 * @class ImagesApi
 * @extends {BaseAPI}
 */
export declare class ImagesApi extends BaseAPI {
    /**
     *
     * @summary Get image by public id
     * @param {ImagesApiImagesControllerGetImageByPublicIdRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ImagesApi
     */
    imagesControllerGetImageByPublicId(requestParameters: ImagesApiImagesControllerGetImageByPublicIdRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ImageUploadResponseDto, any>>;
    /**
     *
     * @summary Upload amenity icon
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ImagesApi
     */
    imagesControllerUploadIcon(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ImageUploadResponseDto, any>>;
    /**
     *
     * @summary Upload multiple image
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ImagesApi
     */
    imagesControllerUploadImages(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<ImageUploadResponseDto[], any>>;
}
