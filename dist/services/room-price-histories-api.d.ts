/**
 * AHomeVilla documentation
 * This is AHomeVilla\'s APIs description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { CreateRoomPriceHistoryDto } from '../models';
import type { RoomPriceHistory } from '../models';
import type { UpdateRoomPriceHistoryDto } from '../models';
/**
 * RoomPriceHistoriesApi - axios parameter creator
 * @export
 */
export declare const RoomPriceHistoriesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Create a new room price history
     * @param {CreateRoomPriceHistoryDto} createRoomPriceHistoryDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPriceHistoryControllerCreate: (createRoomPriceHistoryDto: CreateRoomPriceHistoryDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get all price histories for a specific room detail
     * @param {string} roomDetailId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPriceHistoryControllerFindManyByRoomDetail: (roomDetailId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Delete a room price history
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPriceHistoryControllerRemove: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Update a room price history
     * @param {string} id
     * @param {UpdateRoomPriceHistoryDto} updateRoomPriceHistoryDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPriceHistoryControllerUpdate: (id: string, updateRoomPriceHistoryDto: UpdateRoomPriceHistoryDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * RoomPriceHistoriesApi - functional programming interface
 * @export
 */
export declare const RoomPriceHistoriesApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Create a new room price history
     * @param {CreateRoomPriceHistoryDto} createRoomPriceHistoryDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPriceHistoryControllerCreate(createRoomPriceHistoryDto: CreateRoomPriceHistoryDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoomPriceHistory>>;
    /**
     *
     * @summary Get all price histories for a specific room detail
     * @param {string} roomDetailId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPriceHistoryControllerFindManyByRoomDetail(roomDetailId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<RoomPriceHistory>>>;
    /**
     *
     * @summary Delete a room price history
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPriceHistoryControllerRemove(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary Update a room price history
     * @param {string} id
     * @param {UpdateRoomPriceHistoryDto} updateRoomPriceHistoryDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPriceHistoryControllerUpdate(id: string, updateRoomPriceHistoryDto: UpdateRoomPriceHistoryDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoomPriceHistory>>;
};
/**
 * RoomPriceHistoriesApi - factory interface
 * @export
 */
export declare const RoomPriceHistoriesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Create a new room price history
     * @param {RoomPriceHistoriesApiRoomPriceHistoryControllerCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPriceHistoryControllerCreate(requestParameters: RoomPriceHistoriesApiRoomPriceHistoryControllerCreateRequest, options?: RawAxiosRequestConfig): AxiosPromise<RoomPriceHistory>;
    /**
     *
     * @summary Get all price histories for a specific room detail
     * @param {RoomPriceHistoriesApiRoomPriceHistoryControllerFindManyByRoomDetailRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPriceHistoryControllerFindManyByRoomDetail(requestParameters: RoomPriceHistoriesApiRoomPriceHistoryControllerFindManyByRoomDetailRequest, options?: RawAxiosRequestConfig): AxiosPromise<Array<RoomPriceHistory>>;
    /**
     *
     * @summary Delete a room price history
     * @param {RoomPriceHistoriesApiRoomPriceHistoryControllerRemoveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPriceHistoryControllerRemove(requestParameters: RoomPriceHistoriesApiRoomPriceHistoryControllerRemoveRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @summary Update a room price history
     * @param {RoomPriceHistoriesApiRoomPriceHistoryControllerUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPriceHistoryControllerUpdate(requestParameters: RoomPriceHistoriesApiRoomPriceHistoryControllerUpdateRequest, options?: RawAxiosRequestConfig): AxiosPromise<RoomPriceHistory>;
};
/**
 * Request parameters for roomPriceHistoryControllerCreate operation in RoomPriceHistoriesApi.
 * @export
 * @interface RoomPriceHistoriesApiRoomPriceHistoryControllerCreateRequest
 */
export interface RoomPriceHistoriesApiRoomPriceHistoryControllerCreateRequest {
    /**
     *
     * @type {CreateRoomPriceHistoryDto}
     * @memberof RoomPriceHistoriesApiRoomPriceHistoryControllerCreate
     */
    readonly createRoomPriceHistoryDto: CreateRoomPriceHistoryDto;
}
/**
 * Request parameters for roomPriceHistoryControllerFindManyByRoomDetail operation in RoomPriceHistoriesApi.
 * @export
 * @interface RoomPriceHistoriesApiRoomPriceHistoryControllerFindManyByRoomDetailRequest
 */
export interface RoomPriceHistoriesApiRoomPriceHistoryControllerFindManyByRoomDetailRequest {
    /**
     *
     * @type {string}
     * @memberof RoomPriceHistoriesApiRoomPriceHistoryControllerFindManyByRoomDetail
     */
    readonly roomDetailId: string;
}
/**
 * Request parameters for roomPriceHistoryControllerRemove operation in RoomPriceHistoriesApi.
 * @export
 * @interface RoomPriceHistoriesApiRoomPriceHistoryControllerRemoveRequest
 */
export interface RoomPriceHistoriesApiRoomPriceHistoryControllerRemoveRequest {
    /**
     *
     * @type {string}
     * @memberof RoomPriceHistoriesApiRoomPriceHistoryControllerRemove
     */
    readonly id: string;
}
/**
 * Request parameters for roomPriceHistoryControllerUpdate operation in RoomPriceHistoriesApi.
 * @export
 * @interface RoomPriceHistoriesApiRoomPriceHistoryControllerUpdateRequest
 */
export interface RoomPriceHistoriesApiRoomPriceHistoryControllerUpdateRequest {
    /**
     *
     * @type {string}
     * @memberof RoomPriceHistoriesApiRoomPriceHistoryControllerUpdate
     */
    readonly id: string;
    /**
     *
     * @type {UpdateRoomPriceHistoryDto}
     * @memberof RoomPriceHistoriesApiRoomPriceHistoryControllerUpdate
     */
    readonly updateRoomPriceHistoryDto: UpdateRoomPriceHistoryDto;
}
/**
 * RoomPriceHistoriesApi - object-oriented interface
 * @export
 * @class RoomPriceHistoriesApi
 * @extends {BaseAPI}
 */
export declare class RoomPriceHistoriesApi extends BaseAPI {
    /**
     *
     * @summary Create a new room price history
     * @param {RoomPriceHistoriesApiRoomPriceHistoryControllerCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoomPriceHistoriesApi
     */
    roomPriceHistoryControllerCreate(requestParameters: RoomPriceHistoriesApiRoomPriceHistoryControllerCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoomPriceHistory, any>>;
    /**
     *
     * @summary Get all price histories for a specific room detail
     * @param {RoomPriceHistoriesApiRoomPriceHistoryControllerFindManyByRoomDetailRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoomPriceHistoriesApi
     */
    roomPriceHistoryControllerFindManyByRoomDetail(requestParameters: RoomPriceHistoriesApiRoomPriceHistoryControllerFindManyByRoomDetailRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoomPriceHistory[], any>>;
    /**
     *
     * @summary Delete a room price history
     * @param {RoomPriceHistoriesApiRoomPriceHistoryControllerRemoveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoomPriceHistoriesApi
     */
    roomPriceHistoryControllerRemove(requestParameters: RoomPriceHistoriesApiRoomPriceHistoryControllerRemoveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary Update a room price history
     * @param {RoomPriceHistoriesApiRoomPriceHistoryControllerUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoomPriceHistoriesApi
     */
    roomPriceHistoryControllerUpdate(requestParameters: RoomPriceHistoriesApiRoomPriceHistoryControllerUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoomPriceHistory, any>>;
}
