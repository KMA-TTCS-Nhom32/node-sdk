/**
 * AHomeVilla documentation
 * This is AHomeVilla\'s APIs description
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { CreateRoomPromotionDto } from '../models';
import type { RoomPromotion } from '../models';
import type { RoomPromotionPaginationResultDto } from '../models';
import type { UpdateRoomPromotionDto } from '../models';
/**
 * RoomPromotionsApi - axios parameter creator
 * @export
 */
export declare const RoomPromotionsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @summary Create a new room promotion
     * @param {CreateRoomPromotionDto} createRoomPromotionDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerCreate: (createRoomPromotionDto: CreateRoomPromotionDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get all soft-deleted room promotions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerFindDeleted: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get all room promotions with pagination and filters
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {string} [filters] JSON string of FilterRoomPromotionDto
     * @param {string} [sort] JSON string of SortRoomPromotionDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerFindMany: (page?: number, pageSize?: number, filters?: string, sort?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Get room promotion by ID
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerFindOne: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Delete a room promotion
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerRemove: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Restore a soft-deleted room promotion
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerRestore: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Update a room promotion
     * @param {string} id
     * @param {UpdateRoomPromotionDto} updateRoomPromotionDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerUpdate: (id: string, updateRoomPromotionDto: UpdateRoomPromotionDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @summary Validate a promotion code for a specific room
     * @param {string} code
     * @param {string} roomDetailId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerValidatePromotionCode: (code: string, roomDetailId: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * RoomPromotionsApi - functional programming interface
 * @export
 */
export declare const RoomPromotionsApiFp: (configuration?: Configuration) => {
    /**
     *
     * @summary Create a new room promotion
     * @param {CreateRoomPromotionDto} createRoomPromotionDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerCreate(createRoomPromotionDto: CreateRoomPromotionDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoomPromotion>>;
    /**
     *
     * @summary Get all soft-deleted room promotions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerFindDeleted(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<RoomPromotion>>>;
    /**
     *
     * @summary Get all room promotions with pagination and filters
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {string} [filters] JSON string of FilterRoomPromotionDto
     * @param {string} [sort] JSON string of SortRoomPromotionDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerFindMany(page?: number, pageSize?: number, filters?: string, sort?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoomPromotionPaginationResultDto>>;
    /**
     *
     * @summary Get room promotion by ID
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerFindOne(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoomPromotion>>;
    /**
     *
     * @summary Delete a room promotion
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerRemove(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @summary Restore a soft-deleted room promotion
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerRestore(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoomPromotion>>;
    /**
     *
     * @summary Update a room promotion
     * @param {string} id
     * @param {UpdateRoomPromotionDto} updateRoomPromotionDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerUpdate(id: string, updateRoomPromotionDto: UpdateRoomPromotionDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoomPromotion>>;
    /**
     *
     * @summary Validate a promotion code for a specific room
     * @param {string} code
     * @param {string} roomDetailId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerValidatePromotionCode(code: string, roomDetailId: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RoomPromotion>>;
};
/**
 * RoomPromotionsApi - factory interface
 * @export
 */
export declare const RoomPromotionsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @summary Create a new room promotion
     * @param {RoomPromotionsApiRoomPromotionControllerCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerCreate(requestParameters: RoomPromotionsApiRoomPromotionControllerCreateRequest, options?: RawAxiosRequestConfig): AxiosPromise<RoomPromotion>;
    /**
     *
     * @summary Get all soft-deleted room promotions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerFindDeleted(options?: RawAxiosRequestConfig): AxiosPromise<Array<RoomPromotion>>;
    /**
     *
     * @summary Get all room promotions with pagination and filters
     * @param {RoomPromotionsApiRoomPromotionControllerFindManyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerFindMany(requestParameters?: RoomPromotionsApiRoomPromotionControllerFindManyRequest, options?: RawAxiosRequestConfig): AxiosPromise<RoomPromotionPaginationResultDto>;
    /**
     *
     * @summary Get room promotion by ID
     * @param {RoomPromotionsApiRoomPromotionControllerFindOneRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerFindOne(requestParameters: RoomPromotionsApiRoomPromotionControllerFindOneRequest, options?: RawAxiosRequestConfig): AxiosPromise<RoomPromotion>;
    /**
     *
     * @summary Delete a room promotion
     * @param {RoomPromotionsApiRoomPromotionControllerRemoveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerRemove(requestParameters: RoomPromotionsApiRoomPromotionControllerRemoveRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @summary Restore a soft-deleted room promotion
     * @param {RoomPromotionsApiRoomPromotionControllerRestoreRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerRestore(requestParameters: RoomPromotionsApiRoomPromotionControllerRestoreRequest, options?: RawAxiosRequestConfig): AxiosPromise<RoomPromotion>;
    /**
     *
     * @summary Update a room promotion
     * @param {RoomPromotionsApiRoomPromotionControllerUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerUpdate(requestParameters: RoomPromotionsApiRoomPromotionControllerUpdateRequest, options?: RawAxiosRequestConfig): AxiosPromise<RoomPromotion>;
    /**
     *
     * @summary Validate a promotion code for a specific room
     * @param {RoomPromotionsApiRoomPromotionControllerValidatePromotionCodeRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    roomPromotionControllerValidatePromotionCode(requestParameters: RoomPromotionsApiRoomPromotionControllerValidatePromotionCodeRequest, options?: RawAxiosRequestConfig): AxiosPromise<RoomPromotion>;
};
/**
 * Request parameters for roomPromotionControllerCreate operation in RoomPromotionsApi.
 * @export
 * @interface RoomPromotionsApiRoomPromotionControllerCreateRequest
 */
export interface RoomPromotionsApiRoomPromotionControllerCreateRequest {
    /**
     *
     * @type {CreateRoomPromotionDto}
     * @memberof RoomPromotionsApiRoomPromotionControllerCreate
     */
    readonly createRoomPromotionDto: CreateRoomPromotionDto;
}
/**
 * Request parameters for roomPromotionControllerFindMany operation in RoomPromotionsApi.
 * @export
 * @interface RoomPromotionsApiRoomPromotionControllerFindManyRequest
 */
export interface RoomPromotionsApiRoomPromotionControllerFindManyRequest {
    /**
     *
     * @type {number}
     * @memberof RoomPromotionsApiRoomPromotionControllerFindMany
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof RoomPromotionsApiRoomPromotionControllerFindMany
     */
    readonly pageSize?: number;
    /**
     * JSON string of FilterRoomPromotionDto
     * @type {string}
     * @memberof RoomPromotionsApiRoomPromotionControllerFindMany
     */
    readonly filters?: string;
    /**
     * JSON string of SortRoomPromotionDto
     * @type {string}
     * @memberof RoomPromotionsApiRoomPromotionControllerFindMany
     */
    readonly sort?: string;
}
/**
 * Request parameters for roomPromotionControllerFindOne operation in RoomPromotionsApi.
 * @export
 * @interface RoomPromotionsApiRoomPromotionControllerFindOneRequest
 */
export interface RoomPromotionsApiRoomPromotionControllerFindOneRequest {
    /**
     *
     * @type {string}
     * @memberof RoomPromotionsApiRoomPromotionControllerFindOne
     */
    readonly id: string;
}
/**
 * Request parameters for roomPromotionControllerRemove operation in RoomPromotionsApi.
 * @export
 * @interface RoomPromotionsApiRoomPromotionControllerRemoveRequest
 */
export interface RoomPromotionsApiRoomPromotionControllerRemoveRequest {
    /**
     *
     * @type {string}
     * @memberof RoomPromotionsApiRoomPromotionControllerRemove
     */
    readonly id: string;
}
/**
 * Request parameters for roomPromotionControllerRestore operation in RoomPromotionsApi.
 * @export
 * @interface RoomPromotionsApiRoomPromotionControllerRestoreRequest
 */
export interface RoomPromotionsApiRoomPromotionControllerRestoreRequest {
    /**
     *
     * @type {string}
     * @memberof RoomPromotionsApiRoomPromotionControllerRestore
     */
    readonly id: string;
}
/**
 * Request parameters for roomPromotionControllerUpdate operation in RoomPromotionsApi.
 * @export
 * @interface RoomPromotionsApiRoomPromotionControllerUpdateRequest
 */
export interface RoomPromotionsApiRoomPromotionControllerUpdateRequest {
    /**
     *
     * @type {string}
     * @memberof RoomPromotionsApiRoomPromotionControllerUpdate
     */
    readonly id: string;
    /**
     *
     * @type {UpdateRoomPromotionDto}
     * @memberof RoomPromotionsApiRoomPromotionControllerUpdate
     */
    readonly updateRoomPromotionDto: UpdateRoomPromotionDto;
}
/**
 * Request parameters for roomPromotionControllerValidatePromotionCode operation in RoomPromotionsApi.
 * @export
 * @interface RoomPromotionsApiRoomPromotionControllerValidatePromotionCodeRequest
 */
export interface RoomPromotionsApiRoomPromotionControllerValidatePromotionCodeRequest {
    /**
     *
     * @type {string}
     * @memberof RoomPromotionsApiRoomPromotionControllerValidatePromotionCode
     */
    readonly code: string;
    /**
     *
     * @type {string}
     * @memberof RoomPromotionsApiRoomPromotionControllerValidatePromotionCode
     */
    readonly roomDetailId: string;
}
/**
 * RoomPromotionsApi - object-oriented interface
 * @export
 * @class RoomPromotionsApi
 * @extends {BaseAPI}
 */
export declare class RoomPromotionsApi extends BaseAPI {
    /**
     *
     * @summary Create a new room promotion
     * @param {RoomPromotionsApiRoomPromotionControllerCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoomPromotionsApi
     */
    roomPromotionControllerCreate(requestParameters: RoomPromotionsApiRoomPromotionControllerCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoomPromotion, any>>;
    /**
     *
     * @summary Get all soft-deleted room promotions
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoomPromotionsApi
     */
    roomPromotionControllerFindDeleted(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoomPromotion[], any>>;
    /**
     *
     * @summary Get all room promotions with pagination and filters
     * @param {RoomPromotionsApiRoomPromotionControllerFindManyRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoomPromotionsApi
     */
    roomPromotionControllerFindMany(requestParameters?: RoomPromotionsApiRoomPromotionControllerFindManyRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoomPromotionPaginationResultDto, any>>;
    /**
     *
     * @summary Get room promotion by ID
     * @param {RoomPromotionsApiRoomPromotionControllerFindOneRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoomPromotionsApi
     */
    roomPromotionControllerFindOne(requestParameters: RoomPromotionsApiRoomPromotionControllerFindOneRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoomPromotion, any>>;
    /**
     *
     * @summary Delete a room promotion
     * @param {RoomPromotionsApiRoomPromotionControllerRemoveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoomPromotionsApi
     */
    roomPromotionControllerRemove(requestParameters: RoomPromotionsApiRoomPromotionControllerRemoveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @summary Restore a soft-deleted room promotion
     * @param {RoomPromotionsApiRoomPromotionControllerRestoreRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoomPromotionsApi
     */
    roomPromotionControllerRestore(requestParameters: RoomPromotionsApiRoomPromotionControllerRestoreRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoomPromotion, any>>;
    /**
     *
     * @summary Update a room promotion
     * @param {RoomPromotionsApiRoomPromotionControllerUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoomPromotionsApi
     */
    roomPromotionControllerUpdate(requestParameters: RoomPromotionsApiRoomPromotionControllerUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoomPromotion, any>>;
    /**
     *
     * @summary Validate a promotion code for a specific room
     * @param {RoomPromotionsApiRoomPromotionControllerValidatePromotionCodeRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RoomPromotionsApi
     */
    roomPromotionControllerValidatePromotionCode(requestParameters: RoomPromotionsApiRoomPromotionControllerValidatePromotionCodeRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<RoomPromotion, any>>;
}
